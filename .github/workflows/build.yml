name: Build Docker Image

on:
  push:
    tags:
      - 'v*'
  pull_request:
    branches:
      - 'main'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  changed_files:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    outputs:
      changed_python: ${{ steps.changed_python.outputs.modified_keys }}
      changed_docker: ${{ steps.changed_docker.outputs.any_changed }}

    steps:
    - uses: actions/checkout@v4

    - name: Get all src files that have changed
      id: changed_python
      uses: tj-actions/changed-files@v46
      with:
        files_yaml: |
          database-migrations:
            - database_migrations/**
            - alembic.ini
          nerpybot:
            - NerdyPy/**
            - '!NerdyPy/**.template'
            - pyproject.toml
            - uv.lock

    - name: Get all Docker related files that have changed
      id: changed_docker
      uses: tj-actions/changed-files@v46
      with:
        files: |
          Dockerfile
          .dockerignore

  build_db_migrations:
    needs:
      - changed_files
    if: contains(needs.changed_files.outputs.changed_python, 'database-migrations') || needs.changed_files.outputs.changed_docker == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Docker Container Meta
        id: docker_meta_database-migrations
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-database-migrations
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Github Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Database Migrations
        id: build_database-migrations
        uses: docker/build-push-action@v5
        with:
          target: migrations
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_meta_database-migrations.outputs.tags }}
          labels: ${{ steps.docker_meta_database-migrations.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build_nerdybot:
    needs:
      - changed_files
    if: contains(needs.changed_files.outputs.changed_python, 'nerpybot') || needs.changed_files.outputs.changed_docker == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Docker Container Meta
        id: docker_meta_nerpybot
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Github Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Nerpybot
        id: build_nerpybot
        uses: docker/build-push-action@v5
        with:
          target: bot
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_meta_nerpybot.outputs.tags }}
          labels: ${{ steps.docker_meta_nerpybot.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
